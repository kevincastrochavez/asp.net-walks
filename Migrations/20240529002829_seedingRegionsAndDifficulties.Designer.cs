// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Walks.Data;

#nullable disable

namespace Walks.Migrations
{
    [DbContext(typeof(WalksDbContext))]
    [Migration("20240529002829_seedingRegionsAndDifficulties")]
    partial class seedingRegionsAndDifficulties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Walks.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2201c851-ba47-47ea-aadf-bb9b7ac80216"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("8d8e7199-0409-4cea-8d33-6eabdaeb7d50"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("45359600-275a-4179-a2d3-c375b7a3dca8"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("Walks.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b9399fc-980d-44fd-aafa-e896f9637103"),
                            Code = "LAR",
                            Name = "Larnaca",
                            RegionImageUrl = "https://images.unsplash.com/photo-1515896480369-9c67a87f4ca8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"
                        },
                        new
                        {
                            Id = new Guid("dc1cae41-d002-4ae6-a829-0065c17ed534"),
                            Code = "VNO",
                            Name = "Vilnius",
                            RegionImageUrl = "https://images.unsplash.com/photo-1542601904570-411afe2eab2a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"
                        },
                        new
                        {
                            Id = new Guid("1b8e159e-5345-42aa-be45-57dec1ed71bd"),
                            Code = "RIX",
                            Name = "Riga",
                            RegionImageUrl = "https://images.unsplash.com/photo-1507525428034-b723cf961d3e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"
                        },
                        new
                        {
                            Id = new Guid("e7dd40f4-32a8-4e97-978e-281764a355e6"),
                            Code = "KLA",
                            Name = "Klaipeda",
                            RegionImageUrl = "https://images.unsplash.com/photo-1507525428034-b723cf961d3e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"
                        });
                });

            modelBuilder.Entity("Walks.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("TEXT");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("Walks.Models.Domain.Walk", b =>
                {
                    b.HasOne("Walks.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Walks.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
